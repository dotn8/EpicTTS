<Window x:Class="EpicTTS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mui="http://firstfloorsoftware.com/ModernUI"
        xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:converters="clr-namespace:EpicTTS.Converters"
        xmlns:synthesis="clr-namespace:System.Speech.Synthesis;assembly=System.Speech"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        Title="EpicTTS" Grid.IsSharedSizeScope="True" Closed="Window_Closed">
    <Window.Resources>
        <ControlTemplate x:Key="ListVoiceDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="VoiceName" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="VoiceAge" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="VoiceGender" Width="Auto"/>
                    <ColumnDefinition SharedSizeGroup="VoiceCulture" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding Path=VoiceInfo.Name}" Margin="0,0,10,0"/>
                <TextBlock Grid.Column="1" Text="{Binding Path=VoiceInfo.Age}" Margin="0,0,10,0"/>
                <TextBlock Grid.Column="2" Text="{Binding Path=VoiceInfo.Gender}" Margin="0,0,10,0"/>
                <TextBlock Grid.Column="3" Text="{Binding Path=VoiceInfo.Culture.DisplayName}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleVoiceDataTemplate">
            <StackPanel Orientation="Vertical" Margin="10">
                <TextBlock Text="{Binding Path=VoiceInfo.Name}"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=VoiceInfo.Age}" Margin="0,0,10,0"/>
                    <TextBlock Text="{Binding Path=VoiceInfo.Gender}" Margin="0,0,10,0"/>
                    <TextBlock Text="{Binding Path=VoiceInfo.Culture.DisplayName}"/>
                </StackPanel>
            </StackPanel>
        </ControlTemplate>
        <DataTemplate x:Key="VoiceComboBoxDataTemplate">
            <Control x:Name="theControl" Focusable="False" Template="{StaticResource ListVoiceDataTemplate}" />
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBoxItem}}, Path=IsSelected}" Value="{x:Null}">
                    <Setter TargetName="theControl" Property="Template" Value="{StaticResource SingleVoiceDataTemplate}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <converters:DictionaryConverter x:Key="PauseEnabledStateConverter">
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Ready}">False</system:Boolean>
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Speaking}">True</system:Boolean>
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Paused}">False</system:Boolean>
        </converters:DictionaryConverter>
        <converters:DictionaryConverter x:Key="PlayEnabledStateConverter">
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Ready}">True</system:Boolean>
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Speaking}">False</system:Boolean>
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Paused}">True</system:Boolean>
        </converters:DictionaryConverter>
        <converters:DictionaryConverter x:Key="StopEnabledStateConverter">
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Ready}">False</system:Boolean>
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Speaking}">True</system:Boolean>
            <system:Boolean x:Key="{x:Static synthesis:SynthesizerState.Paused}">True</system:Boolean>
        </converters:DictionaryConverter>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <fluent:Ribbon CanCustomizeRibbon="False" CanCustomizeQuickAccessToolBar="False" CanQuickAccessLocationChanging="False" AutomaticStateManagement="False" IsQuickAccessToolBarVisible="False">

            <fluent:RibbonTabItem ReduceOrder="Default,Default,Default,Large,Large,Large,Other,Other,Other" Header="Home">

                <!--You can set short form (for ex, "Middle" is equal "Middle,Middle,Middle")-->
                <fluent:RibbonGroupBox Name="Large" Header="Input">
                    <fluent:Button SizeDefinition="Large" Header="Green" Icon="Images\Green.png" LargeIcon="Images\GreenLarge.png" />
                    <fluent:Button SizeDefinition="Large" Header="Grey" Icon="Images\Gray.png" LargeIcon="Images\GrayLarge.png" />
                    <fluent:Button SizeDefinition="Large" Header="Grey" Icon="Images\Yellow.png" LargeIcon="Images\YellowLarge.png" />
                    <fluent:Button SizeDefinition="Large" Header="Grey" Icon="Images\Brown.png" LargeIcon="Images\BrownLarge.png" />
                </fluent:RibbonGroupBox>

                <!--By default ReduceOrder="Large, Middle, Small"-->
                <fluent:RibbonGroupBox Name="Default" Header="Voice" MinWidth="200">
                    <ComboBox x:Name="VoiceComboBox" ItemsSource="{Binding Path=Voices}" MinWidth="150" Margin="5"
                              SelectedItem="{Binding Path=SelectedVoice}" ItemTemplate="{StaticResource VoiceComboBoxDataTemplate}"/>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Name="Other" Header="Output">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <Button FontFamily="./resources/#FontAwesome" FontSize="24" Content="&#xf04d;" Command="{Binding Path=StopSpeakingCommand}" IsEnabled="{Binding Path=State, Converter={StaticResource StopEnabledStateConverter}}"/>
                            <Button FontFamily="./resources/#FontAwesome" FontSize="24" Content="&#xf04b;" Command="{Binding Path=SpeakCommand}" IsEnabled="{Binding Path=State, Converter={StaticResource PlayEnabledStateConverter}}"/>
                            <Button FontFamily="./resources/#FontAwesome" FontSize="24" Content="&#xf04c;" Command="{Binding Path=PauseSpeakingCommand}" IsEnabled="{Binding Path=State, Converter={StaticResource PauseEnabledStateConverter}}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding Path=State}"/>
                    </StackPanel>
                </fluent:RibbonGroupBox>

            </fluent:RibbonTabItem>
        </fluent:Ribbon>
        <TextBox Grid.Row="1" Text="{Binding Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</Window>
